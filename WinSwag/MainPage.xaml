<Page
    x:Class="WinSwag.MainPage"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tkc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:tkx="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:controls="using:WinSwag.Controls"
    xmlns:core="using:WinSwag.Core"
    xmlns:views="using:WinSwag.Views"
    xmlns:xaml="using:WinSwag.Xaml"
    xmlns:vm="using:WinSwag.ViewModels"
    mc:Ignorable="d"
    RequestedTheme="{x:Bind AppInfoVM.SelectedTheme, Mode=OneWay}"
    tkx:TitleBar.BackgroundColor="Transparent"
    tkx:TitleBar.ButtonBackgroundColor="Transparent"
    tkx:TitleBar.ButtonHoverBackgroundColor="Gray"
    tkx:TitleBar.ButtonPressedBackgroundColor="DimGray"
    tkx:TitleBar.ButtonInactiveBackgroundColor="Transparent">
    
    <Page.Resources>
        <CollectionViewSource x:Key="Operations"
                              x:Name="Operations"
                              IsSourceGrouped="True"
                              Source="{x:Bind SessionManagerVM.CurrentDocument.OperationGroups, Mode=OneWay}"/>

        <vm:HttpMethodToBrushConverter x:Key="HttpBrush"
            GetBrush="{ThemeResource HttpGetBrush}"
            PostBrush="{ThemeResource HttpPostBrush}"
            PutBrush="{ThemeResource HttpPutBrush}"
            PatchBrush="{ThemeResource HttpPatchBrush}"
            DeleteBrush="{ThemeResource HttpDeleteBrush}"
            FallbackBrush="{ThemeResource HttpFallbackBrush}"/>
        
        <xaml:ThemeChangeDetector x:Key="ThemeChangeDetector"
                                  x:Name="ThemeChangeDetector"
                                  Theme="{ThemeResource ThemeName}"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="186"/>
            <ColumnDefinition Width="2*" MinWidth="200"/>
        </Grid.ColumnDefinitions>
        
        <!-- Acrylic background (left) -->
        <Border Grid.RowSpan="99" Background="{ThemeResource AcrylicBackgroundBrush}"/>

        <!-- Black background (right) -->
        <tkc:DropShadowPanel Grid.Column="1" Grid.RowSpan="99"
                             Color="{ThemeResource DropShadowColor}" BlurRadius="20"
                             HorizontalContentAlignment="Stretch"
                             VerticalContentAlignment="Stretch">
            <Border Background="{ThemeResource Background}"
                    BorderThickness="1,0,0,0"
                    BorderBrush="#11FFFFFF"/>
        </tkc:DropShadowPanel>

        <!-- Command bar (top left) -->
        <Grid Height="48">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Button "Dashboard" -->
            <Button VerticalAlignment="Stretch" Padding="12,0"
                    Style="{StaticResource MyButtonRevealStyle}"
                    Click="{x:Bind DashboardPopup.Show}"
                    ToolTipService.ToolTip="Open Dashboard (ESC)">
                <SymbolIcon Symbol="GlobalNavigationButton"/>
            </Button>

            <!-- Button "Go Back" -->
            <Button Grid.Column="1" Click="{x:Bind OperationManagerVM.GoBack}"
                    IsEnabled="{x:Bind OperationManagerVM.CanGoBack, Mode=OneWay}"
                    VerticalAlignment="Stretch" Padding="12,0"
                    Style="{StaticResource MyButtonRevealStyle}"
                    ToolTipService.ToolTip="Navigate backward (Alt+Left)">
                <SymbolIcon Symbol="Back"/>
            </Button>

            <!-- Button "Go Forward" -->
            <Button Grid.Column="2" Click="{x:Bind OperationManagerVM.GoForward}"
                    IsEnabled="{x:Bind OperationManagerVM.CanGoForward, Mode=OneWay}"
                    VerticalAlignment="Stretch" Padding="12,0"
                    Style="{StaticResource MyButtonRevealStyle}"
                    ToolTipService.ToolTip="Navigate forward (Alt+Right)">
                <SymbolIcon Symbol="Forward"/>
            </Button>

            <!-- Button "API Info" -->
            <Button Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Style="{StaticResource MyButtonRevealStyle}"
                    Click="{x:Bind OperationManagerVM.NavigateToApiInfo}"
                    Visibility="{x:Bind SessionManagerVM.IsSessionLoaded, Mode=OneWay}"
                    Height="48" Padding="12,0">
                <Grid ColumnSpacing="12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <SymbolIcon Symbol="Home"/>
                    <TextBlock Text="{x:Bind SessionManagerVM.CurrentDocument.DisplayName, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis" Grid.Column="1"/>
                </Grid>
            </Button>

        </Grid>

        <!-- API list (left) -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <SemanticZoom Grid.Row="1" Visibility="{x:Bind ViewStateManagerVM.IsIdle, Mode=OneWay}">
                <SemanticZoom.ZoomedInView>
                    <ListView x:Name="OperationsListView"
                              ItemsSource="{x:Bind Operations.View, Mode=OneWay}"
                              ScrollViewer.IsVerticalScrollChainingEnabled="True"
                              IsItemClickEnabled="True"
                              ItemClick="OperationClicked"
                              Padding="0,0,0,4">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Padding" Value="12,4,16,4"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ListViewItemPresenter
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                SelectionCheckMarkVisualEnabled="True"
                                                CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedBackground="{ThemeResource OperationSelectedBrush}"
                                                SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedPointerOverBackground="{ThemeResource OperationSelectedPointerOverBrush}"
                                                PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                SelectedPressedBackground="{ThemeResource OperationSelectedPressedBrush}"
                                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                ContentMargin="{TemplateBinding Padding}"
                                                CheckMode="Inline"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="core:Operation">
                                <Grid ColumnSpacing="12" xaml:DataContext.Model="{x:Bind}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock FontWeight="SemiBold"
                                               Foreground="{Binding Model.Method, Mode=OneTime, Converter={StaticResource HttpBrush}}"
                                               VerticalAlignment="Top"
                                               Text="{Binding Method, Mode=OneTime}"/>

                                    <StackPanel Grid.Column="1">
                                        <TextBlock Grid.Column="1"
                                                   FontFamily="Consolas"
                                                   Text="{x:Bind Path}"/>

                                        <TextBlock FontSize="12" TextWrapping="Wrap"
                                                   Margin="0,2,0,0" Opacity=".8"
                                                   Text="{x:Bind Description}"
                                                   MaxLines="2" TextTrimming="WordEllipsis"
                                                   Visibility="{Binding HasDescription, Mode=OneTime}"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name, Mode=OneTime}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView ItemsSource="{x:Bind Operations.View.CollectionGroups, Mode=OneWay}"
                              DisplayMemberPath="Group.Name"/>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>

            <!-- Busy indicator -->
            <StackPanel Grid.RowSpan="99" Spacing="12"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Visibility="{x:Bind ViewStateManagerVM.IsBusy, Mode=OneWay}">
                <ProgressRing Width="40" Height="40" Foreground="{ThemeResource StarBrush}"
                              HorizontalAlignment="Center"
                              IsActive="{x:Bind ViewStateManagerVM.IsBusy, Mode=OneWay}"/>

                <ItemsControl ItemsSource="{x:Bind ViewStateManagerVM.ActiveTasks}"
                              DisplayMemberPath="Description"/>
            </StackPanel>
        </Grid>
        
        <!-- Main Content Frame (right) -->
        <Frame x:Name="ContentFrame" Grid.Column="1" Grid.RowSpan="99"
               Visibility="{x:Bind ViewStateManagerVM.IsIdle, Mode=OneWay}">
            <Frame.ContentTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromVerticalOffset="0" FromHorizontalOffset="60"/>
                </TransitionCollection>
            </Frame.ContentTransitions>
        </Frame>

        <!-- Grid splitter (vertical) -->
        <tkc:GridSplitter Grid.Column="1" Grid.RowSpan="99" HorizontalAlignment="Left"
                               GripperForeground="Gray"/>

        <!-- Dashboard popup -->
        <controls:PopupWindow x:Name="DashboardPopup" Grid.RowSpan="99" Grid.ColumnSpan="99"
                              HorizontalContentAlignment="Stretch" IsOpen="True"
                              Opened="DashboardPopupOpened" Closed="DashboardPopupClosed">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="3.5*" MinWidth="500"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <views:DashboardPage Grid.Column="1"/>
            </Grid>
        </controls:PopupWindow>

        <!-- Title bar (top right) -->
        <Border x:Name="TitleBar" Background="Transparent" Grid.Column="1" Height="32" VerticalAlignment="Top"/>
    </Grid>
</Page>
