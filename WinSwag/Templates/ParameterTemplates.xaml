<ResourceDictionary
    x:Class="WinSwag.Templates.ParameterTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:WinSwag.ViewModels"
    xmlns:vmm="using:WinSwag.ViewModels.ForModels"
    xmlns:controls="using:WinSwag.Controls"
    xmlns:core="using:WinSwag.Core"
    xmlns:coreex="using:WinSwag.Core.Extensions"
    xmlns:xaml="using:WinSwag.Xaml"
    mc:Ignorable="d">

    <vm:ParameterTemplateSelector
        x:Key="ParameterTemplateSelector"
        FallbackTemplate="{StaticResource FallbackParameterTemplate}"
        BoolTemplate="{StaticResource BoolParameterTemplate}"
        EnumTemplate="{StaticResource EnumParameterTemplate}"
        DateTimeTemplate="{StaticResource DateTimeParameterTemplate}"
        FileTemplate="{StaticResource FileParameterTemplate}"/>

    <DataTemplate x:Key="FallbackParameterTemplate" x:DataType="core:StringArgument">
        <TextBox Text="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 AcceptsReturn="True" FontFamily="Consolas"/>
    </DataTemplate>

    <DataTemplate x:Key="BoolParameterTemplate" x:DataType="core:BoolArgument">
        <ToggleSwitch IsOn="{x:Bind Value, Mode=TwoWay}"
                      OnContent="True" OffContent="False"/>
    </DataTemplate>

    <DataTemplate x:Key="EnumParameterTemplate" x:DataType="core:EnumArgument">
        <Border>
            <!-- Outer border is required because setting ComboBox.DataContext to an
            EnumArgumentViewModel causes an InvalidCastException in generated binding code -->
            <ComboBox xaml:DataContext.Model="{x:Bind}"
                      ItemsSource="{Binding Options}"
                      SelectedItem="{Binding SelectedOption, Mode=TwoWay}"
                      HorizontalAlignment="Stretch">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="vmm:NamedValue">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind Name}"/>
                            <TextBlock Text="(default)" FontStyle="Italic"
                                       Visibility="{x:Bind IsDefault}"
                                       Opacity=".7" Margin="8,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="DateTimeParameterTemplate" x:DataType="core:DateTimeArgument">
        <Grid ColumnSpacing="12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Text="{x:Bind Value, Mode=TwoWay, Converter={StaticResource DateTimeConverter}}"/>

            <Button Grid.Column="1" Style="{StaticResource MyButtonRevealStyle}">
                <Button.Flyout>
                    <Flyout>
                        <Flyout.FlyoutPresenterStyle>
                            <Style TargetType="FlyoutPresenter">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Style>
                        </Flyout.FlyoutPresenterStyle>
                        
                        <controls:DateTimeView DateTime="{x:Bind Value, Mode=TwoWay}"/>
                    </Flyout>
                </Button.Flyout>

                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Calendar"/>
                    <SymbolIcon Symbol="Clock" Margin="4,0,0,0"/>
                    <TextBlock Text="Select" Margin="8,0,0,0"/>
                </StackPanel>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FileParameterTemplate" x:DataType="coreex:FileArgument">
        <Grid ColumnSpacing="12" Background="Transparent" AllowDrop="True"
              DragOver="OnFileDragOver" Drop="OnFileDrop">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Image Source="{x:Bind Thumbnail, Mode=OneWay}" Height="24"/>

            <TextBlock Grid.Column="1"
                       VerticalAlignment="Center"
                       Text="{x:Bind Value.Name, Mode=OneWay, FallbackValue='(no file selected)'}"
                       IsTextSelectionEnabled="True"
                       TextTrimming="CharacterEllipsis"/>

            <Button Click="{x:Bind PickFile}" Grid.Column="2"
                    Style="{StaticResource MyButtonRevealStyle}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <SymbolIcon Symbol="OpenFile"/>
                    <TextBlock Text="Select"/>
                </StackPanel>
            </Button>

            <Button Click="{x:Bind ClearFile}" Grid.Column="3"
                    Style="{StaticResource MyButtonRevealStyle}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <SymbolIcon Symbol="Clear"/>
                    <TextBlock Text="Clear"/>
                </StackPanel>
            </Button>

        </Grid>
    </DataTemplate>

    <vm:DateTimeToStringConverter x:Key="DateTimeConverter"/>
</ResourceDictionary>
